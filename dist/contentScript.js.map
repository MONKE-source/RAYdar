{"version":3,"file":"contentScript.js","mappingssources":["webpack://RAYdar/./src/contentScript/contentScript.js"],"sourcesContent":["let result = 0;\nlet typedText = \"\";\nlet typingTimer;\nlet typingTimer2;\nconst typingDelay = 1500; // 2 seconds delay\nconst typingDelay2 = 3000; // 3 seconds delay\n\nfunction getPagePercentage() {\n  const articleText = document.body.innerText;\n  console.log(\"Article text:\", articleText);\n  fetch(\"http://127.0.0.1:5000/submit-text\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    body: new URLSearchParams({\n      text: articleText,\n    }),\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Response:\", response);\n      alert(\"Response: \" + response);\n      return response.text();\n    })\n    .then((text) => {\n      try {\n        // Try to parse text as JSON\n        const data = JSON.parse(text);\n        console.log(\"Prediction:\", data);\n        alert(\"Prediction: \" + data);\n      } catch (jsonError) {\n        // If JSON parsing fails, try to extract the number from HTML\n        console.error(\"Error parsing JSON:\", jsonError);\n        console.error(\"Response text:\", text); // Log the response text for debugging\n\n        const match = text.match(/Hate-o-meter:\\s*([\\d.]+)/);\n        if (match) {\n          const hateOMeterValue = parseFloat(match[1]);\n          console.log(\"Hate-o-meter value:\", hateOMeterValue);\n          alert(\"Hate-o-meter value: \" + hateOMeterValue);\n          return hateOMeterValue.toFixed(2);\n        } else {\n          console.error(\"Hate-o-meter value not found in the response.\");\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n}\n\n// Function to handle keydown events\nfunction handleKeydownEvent(event) {\n  const keyPressed = event.key;\n\n  // Handle special keys (e.g., Backspace)\n  if (keyPressed === \"Backspace\") {\n    typedText = typedText.slice(0, -1);\n  } else if (keyPressed.length === 1) {\n    typedText += keyPressed;\n  }\n\n  // Clear the previous timer\n  clearTimeout(typingTimer);\n\n  // Set a new timer\n  typingTimer = setTimeout(() => {\n    fetch(\"http://127.0.0.1:5000/submit-text\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: new URLSearchParams({\n        text: typedText,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        console.log(\"Response:\", response);\n        return response.text();\n      })\n      .then((text) => {\n        try {\n          // Try to parse text as JSON\n          const data = JSON.parse(text);\n          console.log(\"Prediction:\", data);\n          alert(\"Prediction: \" + data);\n        } catch (jsonError) {\n          // If JSON parsing fails, try to extract the number from HTML\n          console.error(\"Error parsing JSON:\", jsonError);\n          console.error(\"Response text:\", text); // Log the response text for debugging\n\n          const match = text.match(/Hate-o-meter:\\s*([\\d.]+)/);\n          if (match) {\n            const hateOMeterValue = parseFloat(match[1]);\n            console.log(\"Hate-o-meter value:\", hateOMeterValue);\n            if (hateOMeterValue > 0.6) {\n              alert(\n                \"Offensive message! Please refrain from using such language.\"\n              );\n            }\n          } else {\n            console.error(\"Hate-o-meter value not found in the response.\");\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    typedText = \"\"; // Reset typedText after processing\n  }, typingDelay);\n}\n\n// Add event listener to the document to capture all key presses\ndocument.addEventListener(\"keydown\", handleKeydownEvent);\nwindow.onload = () => {\n  try {\n    const result = getPagePercentage();\n    clearTimeout(typingTimer2);\n    typingTimer2 = setTimeout(() => {\n      console.log(\"Result:\", result);\n      alert(\"Result: \" + result);\n      chrome.runtime.sendMessage({ type: \"ARTICLE_TEXT_VALUE\", text: result });\n      console.log(\"Message sent: ARTICLE_TEXT_VALUE\", result);\n    }, typingDelay2);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\n"],"names":[],"sourceRoot":""}